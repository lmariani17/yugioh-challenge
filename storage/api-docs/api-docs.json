{
    "openapi": "3.0.0",
    "info": {
        "title": "YU-GI-OH! Api Rest",
        "description": "Implementation of Yu-Gi-Oh! Api Rest",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "Local enviroment"
        }
    ],
    "paths": {
        "/api/tokens/create/{id}": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Create API token.",
                "operationId": "auth-store",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "token_name"
                                ],
                                "properties": {
                                    "token_name": {
                                        "description": "Token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Token created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/cards": {
            "get": {
                "tags": [
                    "Cards"
                ],
                "summary": "List all cards.",
                "operationId": "card-index",
                "responses": {
                    "200": {
                        "description": "Get a cards collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CardResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Cards"
                ],
                "summary": "Create a card.",
                "operationId": "card-store",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "first_edition",
                                    "serial_code",
                                    "type",
                                    "amount",
                                    "subtype_id",
                                    "image_id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Card's ID",
                                        "type": "integer",
                                        "format": ""
                                    },
                                    "name": {
                                        "description": "Card's name",
                                        "type": "string",
                                        "format": ""
                                    },
                                    "description": {
                                        "description": "Card's description",
                                        "type": "string",
                                        "format": ""
                                    },
                                    "first_edition": {
                                        "description": "Is first edition",
                                        "type": "boolean",
                                        "format": ""
                                    },
                                    "serial_code": {
                                        "description": "Card's serial code",
                                        "type": "string",
                                        "format": ""
                                    },
                                    "type": {
                                        "description": "Card's type",
                                        "type": "string",
                                        "format": "",
                                        "enum": [
                                            "Monster",
                                            "Magic",
                                            "Trap"
                                        ]
                                    },
                                    "attack": {
                                        "description": "Attack of card",
                                        "type": "integer",
                                        "format": ""
                                    },
                                    "defense": {
                                        "description": "Defense of card",
                                        "type": "integer",
                                        "format": ""
                                    },
                                    "star": {
                                        "description": "Quality of card",
                                        "type": "integer",
                                        "format": ""
                                    },
                                    "amount": {
                                        "description": "Amount of card",
                                        "type": "number",
                                        "format": ""
                                    },
                                    "subtype_id": {
                                        "description": "Card's subtype",
                                        "type": "integer",
                                        "format": ""
                                    },
                                    "image_id": {
                                        "description": "Card's image",
                                        "type": "integer",
                                        "format": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Card created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CardResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/cards/{id}": {
            "get": {
                "tags": [
                    "Cards"
                ],
                "summary": "Get a specific card.",
                "operationId": "card-show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card obteined.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CardResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Cards"
                ],
                "summary": "Update a specific card.",
                "operationId": "card-update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID.",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Card's ID",
                                        "type": "integer",
                                        "format": ""
                                    },
                                    "name": {
                                        "description": "Card's name",
                                        "type": "string",
                                        "format": ""
                                    },
                                    "description": {
                                        "description": "Card's description",
                                        "type": "string",
                                        "format": ""
                                    },
                                    "first_edition": {
                                        "description": "Is first edition",
                                        "type": "boolean",
                                        "format": ""
                                    },
                                    "serial_code": {
                                        "description": "Card's serial code",
                                        "type": "string",
                                        "format": ""
                                    },
                                    "type": {
                                        "description": "Card's type",
                                        "type": "string",
                                        "format": "",
                                        "enum": [
                                            "Monster",
                                            "Magic",
                                            "Trap"
                                        ]
                                    },
                                    "attack": {
                                        "description": "Attack of card",
                                        "type": "integer",
                                        "format": ""
                                    },
                                    "defense": {
                                        "description": "Defense of card",
                                        "type": "integer",
                                        "format": ""
                                    },
                                    "star": {
                                        "description": "Quality of card",
                                        "type": "integer",
                                        "format": ""
                                    },
                                    "amount": {
                                        "description": "Amount of card",
                                        "type": "number",
                                        "format": ""
                                    },
                                    "subtype_id": {
                                        "description": "Card's subtype",
                                        "type": "integer",
                                        "format": ""
                                    },
                                    "image_id": {
                                        "description": "Card's image",
                                        "type": "integer",
                                        "format": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Card updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CardResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "404": {
                        "description": "Not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/card/{id}": {
            "delete": {
                "tags": [
                    "Cards"
                ],
                "summary": "Delete a card.",
                "operationId": "card-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card deleted."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/images": {
            "get": {
                "tags": [
                    "Images"
                ],
                "summary": "List all images.",
                "operationId": "image-index",
                "responses": {
                    "200": {
                        "description": "Get an image collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ImageResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Images"
                ],
                "summary": "Create an image.",
                "operationId": "image-store",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "extension",
                                    "file"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "File name",
                                        "type": "string"
                                    },
                                    "extension": {
                                        "description": "File extension",
                                        "type": "string"
                                    },
                                    "file": {
                                        "description": "Base64 code",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Image created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/images/{id}": {
            "get": {
                "tags": [
                    "Images"
                ],
                "summary": "Get a specific image.",
                "operationId": "image-show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Image ID.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image obteined.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Images"
                ],
                "summary": "Delete an image.",
                "operationId": "image-delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Image ID.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Image deleted."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Images"
                ],
                "summary": "Create an image.",
                "operationId": "image-update",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "File name",
                                        "type": "string"
                                    },
                                    "extension": {
                                        "description": "File extension",
                                        "type": "string"
                                    },
                                    "file": {
                                        "description": "Base64 code",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImageResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "404": {
                        "description": "Not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/subtypes": {
            "get": {
                "tags": [
                    "Subtypes"
                ],
                "summary": "List all subtypes.",
                "operationId": "subtype-index",
                "responses": {
                    "200": {
                        "description": "Get a subtypes collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubtypeResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Subtypes"
                ],
                "summary": "Create a subtype.",
                "operationId": "subtype-store",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Subtype's name",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subtype created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubtypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/subtypes/{id}": {
            "get": {
                "tags": [
                    "Subtypes"
                ],
                "summary": "Get a specific subtype.",
                "operationId": "subtype-show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subtype ID.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subtype obteined.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubtypeResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            },
            "put": {
                "tags": [
                    "Subtypes"
                ],
                "summary": "Update a subtype.",
                "operationId": "subtype-update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subtype ID.",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Subtype's name",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subtype updated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubtypeResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "404": {
                        "description": "Not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List all users.",
                "operationId": "user-index",
                "responses": {
                    "200": {
                        "description": "Get an user collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create an user.",
                "operationId": "user-store",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "remember_token"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User name",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User's email",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User's password",
                                        "type": "string"
                                    },
                                    "remember_token": {
                                        "description": "Security token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/api/user/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a specific user.",
                "operationId": "user-show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User obteined.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AuthResource": {
                "title": "Auth",
                "description": "Auth",
                "properties": {
                    "access_token": {
                        "description": "User's access token",
                        "type": "string",
                        "format": ""
                    }
                },
                "type": "object",
                "example": {
                    "token": "1|Ke43aqsLWBAUoylqRJ9egUEueOrl6FfogFgwhCjP"
                }
            },
            "CardResource": {
                "title": "Card",
                "description": "Card information",
                "properties": {
                    "id": {
                        "description": "Card's ID",
                        "type": "integer",
                        "format": ""
                    },
                    "name": {
                        "description": "Card's name",
                        "type": "string",
                        "format": ""
                    },
                    "description": {
                        "description": "Card's description",
                        "type": "string",
                        "format": ""
                    },
                    "first_edition": {
                        "description": "Is first edition",
                        "type": "boolean",
                        "format": ""
                    },
                    "serial_code": {
                        "description": "Card's serial code",
                        "type": "string",
                        "format": ""
                    },
                    "type": {
                        "description": "Card's type",
                        "type": "string",
                        "format": "",
                        "enum": [
                            "Monster",
                            "Magic",
                            "Trap"
                        ]
                    },
                    "attack": {
                        "description": "Attack of card",
                        "type": "integer",
                        "format": ""
                    },
                    "defense": {
                        "description": "Defense of card",
                        "type": "integer",
                        "format": ""
                    },
                    "star": {
                        "description": "Quality of card",
                        "type": "integer",
                        "format": ""
                    },
                    "amount": {
                        "description": "Amount of card",
                        "type": "number",
                        "format": ""
                    },
                    "subtype": {
                        "$ref": "#/components/schemas/SubtypeResource"
                    },
                    "image": {
                        "$ref": "#/components/schemas/ImageResource"
                    }
                },
                "type": "object",
                "example": {
                    "id": 1,
                    "name": "Dark Magician",
                    "description": "Desciption of Dark Magician",
                    "first_edition": 1,
                    "serial_code": 190124914710293,
                    "type": "Monster",
                    "attack": 2500,
                    "defense": 2000,
                    "star": 9,
                    "amount": 1500,
                    "subtype": {
                        "id": 1,
                        "name": "Normal Monster"
                    },
                    "image_id": {
                        "id": 1,
                        "name": "Dark Margician",
                        "extension": "jpg",
                        "file": "TWFuIGlzIGRpc3Rpbmd1aXNoZWQTWFuIGlzIGRpc3Rpbmd1aXNoZWQTWFuIGlzIGRpc3Rpbmd1aXNoZWQTWFuIGlzIGRpc3Rpbmd1aXNoZWQ"
                    }
                }
            },
            "ImageResource": {
                "title": "Image",
                "description": "Card's image",
                "properties": {
                    "id": {
                        "description": "Image's ID",
                        "type": "integer",
                        "format": ""
                    },
                    "name": {
                        "description": "Fila name",
                        "type": "string",
                        "format": ""
                    },
                    "extension": {
                        "description": "File's extension",
                        "type": "string",
                        "format": ""
                    },
                    "file": {
                        "description": "Base 64 code",
                        "type": "string",
                        "format": ""
                    }
                },
                "type": "object",
                "example": {
                    "id": 1,
                    "name": "Dark Magician",
                    "extension": "jpg",
                    "file": "TWFuIGlzIGRpc3Rpbmd1aXNoZWQTWFuIGlzIGRpc3Rpbmd1aXNoZWQTWFuIGlzIGRpc3Rpbmd1aXNoZWQTWFuIGlzIGRpc3Rpbmd1aXNoZWQ"
                }
            },
            "SubtypeResource": {
                "title": "Subtype",
                "description": "Card's subtype",
                "properties": {
                    "id": {
                        "description": "Subtype's ID",
                        "type": "integer",
                        "format": ""
                    },
                    "name": {
                        "description": "Subtype's name",
                        "type": "string",
                        "format": ""
                    }
                },
                "type": "object",
                "example": {
                    "id": 1,
                    "name": "Normal Monster"
                }
            },
            "UserResource": {
                "title": "User",
                "description": "User",
                "properties": {
                    "id": {
                        "description": "User's ID",
                        "type": "integer",
                        "format": ""
                    },
                    "name": {
                        "description": "User name",
                        "type": "string",
                        "format": ""
                    },
                    "email": {
                        "description": "User's email",
                        "type": "email",
                        "format": ""
                    }
                },
                "type": "object",
                "example": {
                    "id": 1,
                    "name": "Ali Cole",
                    "email": "tillman.edwardo@example.org"
                }
            }
        }
    }
}